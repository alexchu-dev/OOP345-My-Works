/******************************************************************************
//                    OOP345NDD - WS01 @ 15 Jan 2023
//Full Name  : Alex Chu
//Student ID#: 153954219
//Email      : kchu30@myseneca.ca
//
//I have done all the coding by myself and only copied the code
//that my professor provided to complete my workshops and assdignments.
******************************************************************************/

In this workshop 1, the core w1_p1.cpp/ w1_p2.cpp was provided and what I needed to do was creating a foodorder module.

The two global variables named g_taxrate and g_dailydiscount were declared in the foodorder.cpp, and as an "External Linkage" to the main cpp file.

The way to link externally was adding "extern" in front of the type and identifer.

Next, it was to rewrite the int main() to int main (int argc, char* argv[]) which was taught in lecture.

Together with the for loop for (int i = 0; i < argc; i++), it output the argv array one by one.

The argv would display the arguments we inserted (from the Properties of the Project in VS, or during command line in MS with executable or Linux g++).

Next, I started with foodorder header to declare class and the prototypes. iostream, iomanip and string lib were included in w1p1 and w1p2.

FoodOrder.cpp was straight forward. It took me a while to consider which part I should put the g_taxrate and g_dailydiscount declaration, to avoid errors I put them right under all the #include.

FoodOrder class was initiated with blank values, they were then being assigned with values from istream through the read() function.

ws1p1 used istr.get since it was using c-strings, ws1p2 used getline as a string type.

After receiving the values, I used display() to output the data.

As requested by the workshop instruction, there was a COUNTER which has to hold number of times the function has been called, and it "has to REMAIN in the memory for the lifetime of the program".

Therefore, it means the internal linkage - static duration we were taught in class.

I defined it as "static int counter = 1". Then it was being counter++ while it is being called using cout and stacking up for the next call.

Everything else with the ostream format such as setprecision and width were reviews of OOP244.